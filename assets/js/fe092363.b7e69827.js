"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[217],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(r),f=i,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||o;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},2268:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),i=(r(7294),r(3905));const o={sidebar_position:3},a="Structure",s={unversionedId:"basics/structure",id:"basics/structure",title:"Structure",description:"For any application code organization and file structure are the key to success. It helps us divide the code",source:"@site/docs/basics/structure.md",sourceDirName:"basics",slug:"/basics/structure",permalink:"/docs/basics/structure",draft:!1,editUrl:"https://github.com/ds-fancode/redux-rewire/blob/main/documentation/docs/basics/structure.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"sidebarAPI",previous:{title:"Quick start",permalink:"/docs/basics/usage-guide"},next:{title:"Creating slices",permalink:"/docs/basics/creating-slices"}},c={},l=[{value:"Here there are basically three kind of files we will be focusing on:",id:"here-there-are-basically-three-kind-of-files-we-will-be-focusing-on",level:4}],u={toc:l},p="wrapper";function d(e){let{components:t,...o}=e;return(0,i.kt)(p,(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"structure"},"Structure"),(0,i.kt)("p",null,"For any application code organization and file structure are the key to success. It helps us divide the code\nbase on their function. Using redux-rewire does not enforce any predefined convention to follow, but we\ntry to follow the following structure for better understanding and keep code clear.\nNow, before diving into creating screens/pages/components for our application."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"As shared in the screenshot below, a simple project structure with a single\nscreen would look something similar. We can follow the same format for generating any\nother stateful component."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"sample structure",src:r(1677).Z,width:"720",height:"778"})),(0,i.kt)("h4",{id:"here-there-are-basically-three-kind-of-files-we-will-be-focusing-on"},"Here there are basically three kind of files we will be focusing on:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"*.init.ts")),(0,i.kt)("p",null,"This file we defined the initial state of the component.\nalong with the type."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"*.action.ts")),(0,i.kt)("p",null,"All the file name ending with *.action.ts consist of side effect code essentially it is making api\ncalls, reading values from storage or any other activity depending on use case."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"*.reducer.ts")),(0,i.kt)("p",null,"All the file name ending with *.action.ts consist of side effect code essentially it is making api\ncalls, reading values from storage or any other activity depending on use case."))}d.isMDXComponent=!0},1677:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/sample-structure-8e6609ef9d82a3ed7d25dfbb1860b276.png"}}]);