"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9671],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9881:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:1},o="Redux-Rewire",l={unversionedId:"intro",id:"intro",title:"Redux-Rewire",description:"State management in large-scale react projects.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/redux-rewire/docs/intro",draft:!1,editUrl:"https://github.com/ds-fancode/redux-rewire/blob/main/documentation/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"sidebarAPI",next:{title:"Basics",permalink:"/redux-rewire/docs/category/basics-1"}},s={},c=[{value:"State management in large-scale react projects.",id:"state-management-in-large-scale-react-projects",level:3},{value:"What is Redux-Rewire?",id:"what-is-redux-rewire",level:2},{value:"Why Redux-Rewire?",id:"why-redux-rewire",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"redux-rewire"},"Redux-Rewire"),(0,a.kt)("h3",{id:"state-management-in-large-scale-react-projects"},"State management in large-scale react projects."),(0,a.kt)("h2",{id:"what-is-redux-rewire"},"What is Redux-Rewire?"),(0,a.kt)("p",null,"Redux-Rewire is a state management library for React applications.\nIt is a toolkit built around few underlying library that provides a simple and clean API to manage state in large-scale applications."),(0,a.kt)("h2",{id:"why-redux-rewire"},"Why Redux-Rewire?"),(0,a.kt)("p",null,"Below are some of the reasons why you should use Redux-Rewire in your React applications."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Incremental stores, though some library provides them but is difficult to implement, and some lacks clear documentation. "),(0,a.kt)("li",{parentName:"ul"},"Convention for proper namespacing components state so that a single component could be used multiple times on a single page without having any kind of side-effects on each other's state."),(0,a.kt)("li",{parentName:"ul"},"State mutation makes code complicated, not taking this seriously could lead to some non-debuggable bugs."),(0,a.kt)("li",{parentName:"ul"},"Implementation of side effects is still nieve in many of the above libraries. Redux-rewire does this through actions file defined next to the component"),(0,a.kt)("li",{parentName:"ul"},"Not enough typesafe or complicated to implement as the project grows"),(0,a.kt)("li",{parentName:"ul"},"A solution that should work with both web and react-native projects"),(0,a.kt)("li",{parentName:"ul"},"Should work with server-side rendering."),(0,a.kt)("li",{parentName:"ul"},"Writing unit test cases is difficult and many times front end projects ignore writing them.")))}d.isMDXComponent=!0}}]);