name: release package
on:
  workflow_dispatch:
    branches:
      - main
    inputs:
      release-type:
        description: 'Release type (one of): patch, minor, major, prepatch, preminor, premajor, prerelease'
        type: choice
        default: "prerelease"
        options:
          - "patch"
          - "minor"
          - "major"
          - "prepatch"
          - "preminor"
          - "premajor"
          - "prerelease"
        required: true
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Configure github
        run: |
          git config --global user.email "fc-bot@fancode.com"
          git config --global user.name "fc-bot"

      - run: echo "Running on branch | base branch - ${{github.base_ref}} | head branch - ${{github.head_ref}}"

      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_GITHUB_ACTION }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16.16.0
          cache: yarn
      - name: Installing dependencies
        run: yarn install --frozen-lockfile # for installing on CI

      - name: Bump release version
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Bump package pre-release version
      # Use tag beta for pre-release versions
      - name: Bump pre-release version
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      - name: Building Package
        run: yarn build

      # Commit changes
      - name: Commit CHANGELOG.md and package.json changes and create tag
        run: |
          git add "package.json"
          git commit -m "chore: release ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }}

      - name: Push changes to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin && git push --tags

      # Publish version to public repository
      - name: Publish
        working-directory: ./lib
        run: npm publish --verbose --access public --tag ${{ env.RELEASE_TAG }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN_REDUX_REWIRE }}